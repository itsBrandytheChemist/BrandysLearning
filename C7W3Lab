#ui.R
# Import libraries
library(shiny)
library(tidyverse)

categorical_varibles = c('cyl', 'vs', 'am', 'gear', 'carb')

# Application Layout
shinyUI(fluidPage(
  br(),
  # TASK 1: Application title
  titlePanel(title = "Data Exploration Using Shiny"),
  # Define sidebar layout with sidebar panel and main panel
  sidebarLayout(
    sidebarPanel(
      # TASK 2: Add h3 and variable select inputs for continuous/categorical 
      h3("Explore mtcars"),
      varSelectInput("continuous_variables",
                     "Select Continuous Variable",
                     data = select(mtcars, -categorical_variables),
                     selected = "mpg"),
      varSelectInput("categorical_variables",
                     "Select Categorical Variable",
                     data = select(mtcars[categorical_variables]),
                     selected = "cyl"),
      # TASK 3: Add numeric input for bins and radio buttons for fill
      h3("Histogram settings:"),
      numericInput(inputId("bins"),
                   label("Number of bins"),
                   min=2,
                   max=20,
                   value=10),
      radioButtons(inputId("hist_fill"),
                   label("Histogram fill:"),
                   choices=c("default", "blue")),
      # TASK 4: Add variable map guide
      h4("Plot Variable Map Guide"),
      p('Miles/gallon = mpg', br(),
        'Displacement (cu in.) = disp', br(),
        'Gross horsepower = hp', br(),
        'Rear axle ratio = drat', br(),
        'Weight (1000 lbs) = wt', br(),
        '1/4 mile time = qsec', br(),
        'Number of cylinders = cyl', br(),
        'Engine\n(0 = V-shaped, 1 = straight) = vs', br(),
        'Transmission\n(0 = automatic, 1 = manual) = am', br(),
        'Number of forward gears = gear', br(),
        'Number of carburetors = carb'
      )
    ),
    mainPanel(
      # TASK 5: Add three panels
      # TASK 5: Add three panels
      tabsetPanel(
        tabPanel(
          "Distribution of Numerical Variables",
          plotOutput("p1"),  # histogram
          plotOutput("p2")   # boxplot
        ),
        tabPanel(
          "Distribution of Categorical Variables",
          plotOutput("p3")  # bar chart
        ),
        tabPanel(
          "Plots for Observing Data Correlation",
          plotOutput("p4"))  # scatter plot
      )
    )
      )
    ),
    position = "right"
  )
)

#server.R
# Import libraries
library(shiny)
library(ggplot2)

# Define server logic
shinyServer(function(input, output) {
  # TASK 6: Histogram 
  output$p1 <- renderPlot({
    # Base ggplot object
    p <- ggplot(mtcars, aes(x = !!input$continuous_variable)) +
      labs(y = "Number of Cars", title = paste("Trend of ", input$continuous_variable))
    
    # Based on radio button input, change histogram fill
    if (input$hist_fill == "default") {
      p + geom_histogram(bins = input$bins)
    }
    else {
      p + geom_histogram(bins = input$bins, fill = "dodgerblue3")
    }
  })
  
  # TASK 7: Boxplot
  output$p2 <- renderPlot({
    ggplot(mtcars, aes(y = !!input$continuous_variable)) +
      geom_boxplot() +
      labs(title = paste("How", input$continuous_variable, "value is spread")) +
      coord_flip()
  })
  
  # TASK 8: Bar chart
  output$p3 <- renderPlot({
    ggplot(data = mtcars,
           aes(x = factor(!!input$categorical_variable),
               fill = factor(!!input$categorical_variable))) +
      geom_bar() +
      labs(x = input$categorical_variable,
           title = paste("Trend of", input$categorical_variable))
  })
  
  # TASK 9: Scatter plot
  output$p4 <- renderPlot({
    ggplot(mtcars, aes(x = !!input$continuous_variable,
                       y = wt,
                       color = factor(!!input$categorical_variable))) +
      geom_point(size = 3) +
      labs(title = paste("Distribution of", input$continuous_variable, "with respect to Weight"))
  })
})
